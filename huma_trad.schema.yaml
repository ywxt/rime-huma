# Rime schema settings
# encoding: utf-8

schema:
  schema_id: huma_trad
  name: 虎碼・繁
  version: "20230421"
  author:
    - 發明人 ID;PeaceB
    - rime schema by ywxt
  description: |
    虎碼輸入方案，繁體簡碼
    QQ群：21134461

    雙重反查、三重註解、屏蔽詞組、全碼後置、繁入簡出、手動造詞...
    https://gitee.com/ywxt/rime-huma/
    https://github.com/ywxt/rime-huma/
  dependencies:
    - luna_pinyin
    - stroke
    - huma_spelling_pseudo
  
  requirements: |
    - luna_pinyin
    - stroke
    - huma_spelling_pseudo
    - lua/huma/charset.lua
    - lua/huma/charset_filter.lua
    - lua/huma/postpone_fullcode.lua
    - lua/huma/single_char_only.lua
    - lua/huma/spelling.lua
    - lua/huma/spelling_processor.lua
    - lua/huma/lib.lua
    - huma_trad.dict.yaml
    - huma.short.dict.yaml
    - huma.short.extended.dict.yaml
    - huma.short.phrase.dict.yaml
    - huma.short.punct.dict.yaml
    - huma.char.dict.yaml
    - huma.phrase.dict.yaml
    - huma.extended.dict.yaml
    - huma.symbols.yaml


__patch:
  - symbols:/patch?
  - huma_trad.custom:/patch?

switches:
  - name: charset_filter 
    states: [ 全集, 常用 ]
    reset: 1
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: chinese_only  #是否只顯示漢字
    reset: 1
    states: [ Aa, 字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]
    # 切换热键由 spelling/lua 下的 cycle_key 和 switch_key 定义
  - options:
    - spelling.off
    - spelling.lv1
    - spelling.lv2
    - spelling.lv3
    states: [ 〇註解, 一重註解, 二重註解, 三重註解 ]
    reset: 0
  - name: postpone_fullcode  # 仅作用于单字。
    reset: 1
    states: [ ＝原始排序, ↓全碼後置 ]
  - name: single_char_only
    states: [ 詞組派, 單字派 ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - lua_processor@*huma.spelling_processor@spelling_processor
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@luna_pinyin
    - affix_segmentor@luna_pinyin_lookup
    - affix_segmentor@stroke_lookup
    - affix_segmentor@reverse_lookup
    - affix_segmentor@encode
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - history_translator@history
    - table_translator@fixed
    - table_translator
    - script_translator@luna_pinyin
    - script_translator@luna_pinyin_lookup
    - table_translator@stroke_lookup
    - table_translator@fixed_encode
    - table_translator@encode_sentence
  filters:
    - lua_filter@*huma.single_char_only@single_char_only
    - lua_filter@*huma.charset_filter@charset_filter
    # - charset_filter@utf8  # 该组件在 librime 1.6.* 以后错误过滤字符，暂时停用
    - simplifier@simplify
    - reverse_lookup_filter@luna_pinyin_reverse_lookup
    - reverse_lookup_filter@stroke_reverse_lookup
    - lua_filter@*huma.spelling@spelling
    - lua_filter@*huma.spelling@spelling_reverse
    - lua_filter@*huma.postpone_fullcode@postpone_fullcode
    - uniquifier
    # - lua_filter@debug_filter


# 防止对 punct 进行过滤
common_namespace:
  tags: [ abc, encode, reverse_lookup, luna_pinyin_lookup, stroke_lookup ]

single_char_only:
  __include: common_namespace

charset_filter:
  __include: common_namespace

simplify:
  __include: common_namespace
  option_name: simplification
  tips: all


lua_reverse_db:
  spelling: huma_spelling_pseudo
  code: huma_trad

spelling:
  tags: [ abc, encode, punct ]
  lua:
    switch_key: 'Control+c'
    cycle_key: 'Shift+Control+C'
    # 注意写法：Shift 在前，Control 在后。

spelling_reverse:
  tags:  [reverse_lookup, luna_pinyin_lookup, stroke_lookup]


postpone_fullcode:
  tags: [ abc ]
  lua:
    max_index: 6  # 最大后置位置，默认为 4

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  delimiter: " `'"
  max_code_length: 4
  auto_select: true
  auto_clear: max_length
  algebra:
    - xform/^\*//  # 特码以星号开头，以便在全码后置脚本中区分，以防识别为全码

fixed:
  __include: translator
  enable_user_dict: false
  enable_sentence: false
  initial_quality: 1000

fixed_encode:
  __include: fixed
  tag: encode

translator:
  dictionary: huma_trad
  prism: huma_trad
  enable_sentence: false
  enable_user_dict: true
  enable_encoder: true
  enable_completion: false
  encode_commit_history: false  # 对连续上屏的词自动成词
  max_phrase_length: 10  # 自动成词的最大词长
  # preedit_format:
  #   - 'xform/^([a-z]*)$/$1\t（\U$1\E）/'

encode:
  tag: encode
  prefix: "'"    
  tips: 【手動造詞】
  closing_tips: 【造詞關閉】
  
encode_sentence:
  __include: translator
  tag: encode
  enable_sentence: true
  enable_user_dict: true
  enable_completion: true


# 用于混输
luna_pinyin:
  tag: luna_pinyin
  dictionary: luna_pinyin
  initial_quality: 0.3

  # 拼音混输。不使用 luna_pinyin_lookup，是因为那样做会导致所有常规编码段和常规候
  # 选被同时打上 abc 和 luna_pinyin_lookup 标签，从而同时被 xmsp 和 xmsp_for_rvlk
  # 接收，被添加两次注释。
  # abc_segmentor:
  # extra_tags: [ luna_pinyin ]

reverse_lookup:
  tag: reverse_lookup
  prefix: "`"    # 反查引导符「`」
  # suffix:   # 反查关闭符，暂不定义
  tips: 【反查：拼音+筆畫】
  closing_tips: 【反查關閉】
    # preedit_format:
  # - xform/([nljqxy])v/$1ü/
  extra_tags:
    - luna_pinyin_lookup
    - stroke_lookup

luna_pinyin_lookup:
  tag: luna_pinyin_lookup
  dictionary: luna_pinyin
  prefix: '`P'
  tips: 【朙月拼音反查】
  closing_tips: 【反查關閉】
  initial_quality: 0.2

stroke_lookup:
  tag: stroke_lookup
  dictionary: stroke
  prefix: '`B'
  tips: 【五筆劃反查】
  closing_tips: 【反查關閉】
  initial_quality: 0.5
  preedit_format:
    - 'xform/^([hspnz]+)$/$1\t（\U$1\E）/'
    - xlit/HSPNZ/一丨丿丶乙/

luna_pinyin_reverse_lookup:
  tags: [ luna_pinyin, luna_pinyin_lookup ]
  dictionary: huma_trad
  # overwrite_comment: true  # 覆蓋其他提示

stroke_reverse_lookup:
  __include: luna_pinyin_reverse_lookup
  tags: [ stroke_lookup ]

punctuator:
  __patch: huma.symbols:/punctuator?

# 本节点仅用于被 __patch 指令引用
key_bindings:
  __append:
    - { when: always, accept: "Control+Shift+space", toggle: simplification }
    - { when: composing, accept: "Control+s", toggle: single_char_only }
    - { when: composing, accept: "Control+o", toggle: charset_filter }
    - { when: composing, accept: Caps_Lock, send: Escape  }
    - { when: has_menu, accept: semicolon, send: 2 }  # 分号次选
    - { when: has_menu, accept: apostrophe, send: 3 }  # 引号三选

key_binder:
  bindings:
    __patch:
      - key_bindings:/emacs_editing?
      - key_bindings:/move_by_word_with_tab?
      - key_bindings:/paging_with_minus_equal?
      - key_bindings:/numbered_mode_switch?
      - key_bindings
      # 方案用户可仿照 key_bindings 节点在 *.custom.yaml 文件中添加按键绑定：
      - huma_trad.custom:/key_bindings?

recognizer:
  patterns:
    uppercase: "^(?![`;]).*[A-Z][-_+.'0-9A-Za-z]*$"
    encode:           "^'([a-z]+'?)*$"
    reverse_lookup:     "^`([a-z]+'?)*$"
    luna_pinyin_lookup: "^`P([a-z]+'?)*$"
    stroke_lookup:      "^`B([a-z]+'?)*$"
    punct: '^/([0-9]0?|[A-Za-z]+)$'
